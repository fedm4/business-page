{"version":3,"sources":["components/MainNav/MainNav.js","pages/AboutMe/AboutMe.js","components/ServiceCard/ServiceCard.js","pages/Services/Services.js","pages/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["MainNav","className","key","link","label","map","item","to","AboutMe","ServiceCard","props","title","src","icon","body","Services","Contact","href","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yWA2CeA,G,MAtCC,WA+BZ,OACI,yBAAKC,UAAU,YA9BE,CACjB,CACIC,IAAK,QACLC,KAAM,IACNC,MAAO,YAEX,CACIF,IAAK,QACLC,KAAM,YACNC,MAAO,YAOX,CACIF,IAAK,QACLC,KAAM,WACNC,MAAO,YAYQC,KARP,SAAAC,GACZ,OACI,kBAAC,IAAD,CAAML,UAAU,uBAAuBM,GAAID,EAAKH,KAAMD,IAAKI,EAAKJ,KAAK,8BAAOI,EAAKF,cCT9EI,G,MAnBC,WACZ,OACI,6BAASP,UAAU,4BACf,wBAAIA,UAAU,SAAQ,0BAAMA,UAAU,mBAAhB,QAAtB,QACA,6BAASA,UAAU,WACf,mTAGA,wPAIA,8UCCDQ,G,MAdK,SAAAC,GAChB,OACI,6BAASR,IAAKQ,EAAMC,MAAOV,UAAU,gBACjC,gCACI,yBAAKW,IAAG,uBAAkBF,EAAMG,QAChC,4BAAKH,EAAMC,QAEf,2BACKD,EAAMI,SCsCRC,G,MA3CE,WAiCb,OACI,6BAASd,UAAU,4BACf,wBAAIA,UAAU,SAAQ,0BAAMA,UAAU,mBAAhB,QAAtB,QACA,yBAAKA,UAAU,WAnCN,CACb,CACIY,KAAM,gBACNF,MAAO,YACPG,KAAM,6IAEV,CACID,KAAM,aACNF,MAAO,uBACPG,KAAM,qOAEV,CACID,KAAM,cACNF,MAAO,UACPG,KAAM,mCAEV,CACID,KAAM,iBACNF,MAAO,aACPG,KAAM,oDAEV,CACID,KAAM,aACNF,MAAO,SACPG,KAAM,kDAEV,CACID,KAAM,kBACNF,MAAO,cACPG,KAAM,6CAOQT,IAAII,OC1BfO,G,MAZC,WACZ,OACI,6BAASf,UAAU,4BACf,wBAAIA,UAAU,SAAQ,0BAAMA,UAAU,mBAAhB,QAAtB,OACA,yBAAKA,UAAU,WACX,gEAAqC,uBAAGgB,KAAK,oCAAR,8BACrC,gC,MCeDC,MAjBf,WACE,OACE,yBAAKjB,UAAU,OACX,kBAAC,IAAD,KACI,4BAAQA,UAAU,eACd,kBAAC,EAAD,OAEJ,0BAAMA,UAAU,QACZ,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,IAAIC,UAAYb,IAClC,kBAAC,IAAD,CAAOY,KAAK,YAAYC,UAAYN,IACpC,kBAAC,IAAD,CAAOK,KAAK,WAAWC,UAAYL,QCP/BM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e63d0aba.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MainNav.scss\";\n\nconst MainNav = () => {\n\n    const navItemsData = [\n        {\n            key: \"nav-1\",\n            link: \"/\",\n            label: \"About Me\"\n        },\n        {\n            key: \"nav-2\",\n            link: \"/services\",\n            label: \"Services\"\n        },\n        //{\n        //    key: \"nav-3\",\n        //    link: \"#\",\n        //    label: \"Portfolio\"\n        //},\n        {\n            key: \"nav-4\",\n            link: \"/contact\",\n            label: \"Contact\"\n        }\n    ];\n\n    const navItem = item =>{\n        return (\n            <Link className=\"nav-item title-fonts\" to={item.link} key={item.key}><span>{item.label}</span></Link>\n        );\n    };\n\n    return (\n        <nav className=\"main-nav\">\n            { navItemsData.map(navItem) }\n        </nav>\n    );\n};\n\nexport default MainNav;","import React from \"react\";\n\nimport \"./AboutMe.scss\";\n\nconst AboutMe = () => {\n    return (\n        <section className=\"about-me content-section\">\n            <h1 className=\"title\"><span className=\"title-underline\">Abou</span>t Me</h1>\n            <article className=\"content\">\n                <p>\n                    Hi! I'm Federico and I have 10+ years of experience in software, designing and creating solutions that can help businesses grow, coming either from a client's idea, or a research of what tool can be the next step for the company to expand, reduce costs and automate processes.\n                </p>\n                <p>\n                    My experience goes from fin tech and e-commerce to tourism and telecommunications, including insurance and marketing.\n                    I'm currently teaching front-end development, focused on react, on a non governmental organization.\n                </p>\n                <p>\n                    My technical knowledge varies from web applications development in both front-end as well as back-end, to micro services and lambda functions. I also have experience with web servers both designing, maintaining, and migrating data or entire systems from standard web servers to a cloud based system.\n                </p>\n            </article>\n        </section>\n    );\n};\nexport default AboutMe;","import React from \"react\";\nimport \"./ServiceCard.scss\";\n\nconst ServiceCard = props => {\n    return (\n        <article key={props.title} className=\"service-card\">\n            <header>\n                <img src={`images/icons/${props.icon}`} />\n                <h2>{props.title}</h2>\n            </header>\n            <p>\n                {props.body}\n            </p>\n        </article>\n    );\n};\n\nexport default ServiceCard;","import React from \"react\";\nimport ServiceCard from \"../../components/ServiceCard/ServiceCard\";\n\nimport \"./Services.scss\";\n\n\nconst Services = () =>{\n    const services = [\n        {\n            icon: \"analytics.svg\",\n            title: \"Analytics\",\n            body: \"Im the best in analytics! I can offer you the best analytics stuff you will ever have and you will be surprised with the quality and test\"\n        },\n        {\n            icon: \"coding.svg\",\n            title: \"FrontEnd Development\",\n            body: \"FrontEnd Development focused on the interactions and the design of the page for you or your clients to feel comfortable and engaged while navigating through the depths of the cthulhean sea, as far as the black skies allow us.\"\n        },\n        {\n            icon: \"browser.svg\",\n            title: \"Browser\",\n            body: \"Browser is the way to go, dude!\"\n        },\n        {\n            icon: \"connection.svg\",\n            title: \"Connection\",\n            body: \"Connection is the real stuff in connecting stuff\"\n        },\n        {\n            icon: \"layers.svg\",\n            title: \"Layers\",\n            body: \"So many layers of complexity will win me money\"\n        },\n        {\n            icon: \"seo-and-web.svg\",\n            title: \"SEO and Web\",\n            body: \"SEO is a tool. Web is a tool. I do both.\"\n        }\n    ];\n    return (\n        <section className=\"services content-section\">\n            <h1 className=\"title\"><span className=\"title-underline\">Serv</span>ices</h1>\n            <div className=\"content\">\n                {services.map(ServiceCard)}\n            </div>\n        </section>\n    );\n};\n\nexport default Services;","import React from \"react\";\n\nimport \"./Contact.scss\";\nimport ServiceCard from \"../../components/ServiceCard/ServiceCard\";\n\nconst Contact = () => {\n    return (\n        <section className=\"services content-section\">\n            <h1 className=\"title\"><span className=\"title-underline\">Cont</span>act</h1>\n            <div className=\"content\">\n                <p>Please feel free to contact me at <a href=\"mailto:fede.m.fede+dev@gmail.com\">fede.m.fede+dev@gmail.com</a></p>\n                <p></p>\n            </div>\n        </section>\n    );\n};\n\nexport default Contact;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route } from 'react-router';\nimport MainNav from \"./components/MainNav/MainNav\";\nimport AboutMe from \"./pages/AboutMe/AboutMe\";\nimport Services from \"./pages/Services/Services\";\nimport Contact from \"./pages/Contact/Contact\";\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n            <header className=\"main-header\">\n                <MainNav />\n            </header>\n            <main className=\"main\">\n                <Route exact path=\"/\" component={ AboutMe } />\n                <Route path=\"/services\" component={ Services } />\n                <Route path=\"/contact\" component={ Contact } />\n            </main>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}