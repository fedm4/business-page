{"version":3,"sources":["pages/AboutMe/img/fedetc.jpg","pages/AboutMe/img/fedeclase2.jpeg","pages/Services/icons/browser.svg","pages/Services/icons/coding.svg","pages/Services/icons/connection.svg","pages/Services/icons/analytics.svg","pages/Services/icons/layers.svg","pages/Services/icons/seo-and-web.svg","components/MainNav/MainNav.js","pages/AboutMe/AboutMe.js","components/ServiceCard/ServiceCard.js","pages/Services/Services.js","pages/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainNav","className","key","link","label","map","item","to","AboutMe","alt","src","Fedetc","loading","FedeClase2","ServiceCard","props","title","icon","body","Services","services","CodingIcon","BrowserIcon","ConnectionIcon","Contact","faEnvelope","href","faLinkedin","faSkype","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,2ICA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,iKC2C5BC,G,MAtCC,WA+BZ,OACI,yBAAKC,UAAU,YA9BE,CACjB,CACIC,IAAK,QACLC,KAAM,IACNC,MAAO,YAEX,CACIF,IAAK,QACLC,KAAM,YACNC,MAAO,YAOX,CACIF,IAAK,QACLC,KAAM,WACNC,MAAO,YAYQC,KARP,SAAAC,GACZ,OACI,kBAAC,IAAD,CAAML,UAAU,uBAAuBM,GAAID,EAAKH,KAAMD,IAAKI,EAAKJ,KAAK,8BAAOI,EAAKF,c,kCCG9EI,G,MA9BC,WACZ,OACI,6BAASP,UAAU,4BACf,wBAAIA,UAAU,SAAQ,0BAAMA,UAAU,mBAAhB,QAAtB,QACA,6BAASA,UAAU,WACf,6BACI,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,QAAQQ,IAAI,GAAGC,IAAKC,IAAQC,QAAQ,UAEvD,mTAGA,yPAMJ,6BACI,yBAAKX,UAAU,yBACX,yBAAKA,UAAU,QAAQS,IAAKG,IAAYD,QAAQ,UAEpD,+UCVLE,G,MAdK,SAAAC,GAChB,OACI,6BAASb,IAAKa,EAAMC,MAAOf,UAAU,gBACjC,gCACI,yBAAKS,IAAKK,EAAME,OAChB,4BAAKF,EAAMC,QAEf,2BACKD,EAAMG,S,2DC6CRC,G,kBA3CE,WACb,IAAMC,EAAW,CAMb,CACIH,KAAMI,IACNL,MAAO,uBACPE,KAAM,+KAEV,CACID,KAAMK,IACNN,MAAO,sBACPE,KAAM,kLAEV,CACID,KAAMM,IACNP,MAAO,qBACPE,KAAM,kJAad,OACI,6BAASjB,UAAU,4BACf,wBAAIA,UAAU,SAAQ,0BAAMA,UAAU,mBAAhB,QAAtB,QACA,yBAAKA,UAAU,WACVmB,EAASf,IAAIS,O,gCCvBfU,EAnBC,WACZ,OACI,6BAASvB,UAAU,2BACf,wBAAIA,UAAU,SAAQ,0BAAMA,UAAU,mBAAhB,QAAtB,OACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAiBgB,KAAMQ,MAAc,uBAAGC,KAAK,4BAAR,sBAEzC,yBAAKzB,UAAU,gBACX,kBAAC,IAAD,CAAiBgB,KAAMU,MAAc,uBAAGD,KAAK,oDAAR,qDAEzC,yBAAKzB,UAAU,gBACX,kBAAC,IAAD,CAAiBgB,KAAMW,MAAW,uBAAGF,KAAK,wBAAR,iB,MCMvCG,MAjBf,WACE,OACE,yBAAK5B,UAAU,OACX,kBAAC,IAAD,KACI,4BAAQA,UAAU,eACd,kBAAC,EAAD,OAEJ,0BAAMA,UAAU,QACZ,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIC,UAAYxB,IAClC,kBAAC,IAAD,CAAOuB,KAAK,YAAYC,UAAYb,IACpC,kBAAC,IAAD,CAAOY,KAAK,WAAWC,UAAYR,QCP/BS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.bac5a0cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fedetc.33ff5d2f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fedeclase2.fd14a406.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/browser.8a3e25d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/coding.a0bc9e80.svg\";","module.exports = __webpack_public_path__ + \"static/media/connection.1265199f.svg\";","module.exports = __webpack_public_path__ + \"static/media/analytics.434ee1b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/layers.fa0634ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/seo-and-web.29b1cb4d.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MainNav.scss\";\n\nconst MainNav = () => {\n\n    const navItemsData = [\n        {\n            key: \"nav-1\",\n            link: \"/\",\n            label: \"About Me\"\n        },\n        {\n            key: \"nav-2\",\n            link: \"/services\",\n            label: \"Services\"\n        },\n        //{\n        //    key: \"nav-3\",\n        //    link: \"#\",\n        //    label: \"Portfolio\"\n        //},\n        {\n            key: \"nav-4\",\n            link: \"/contact\",\n            label: \"Contact\"\n        }\n    ];\n\n    const navItem = item =>{\n        return (\n            <Link className=\"nav-item title-fonts\" to={item.link} key={item.key}><span>{item.label}</span></Link>\n        );\n    };\n\n    return (\n        <nav className=\"main-nav\">\n            { navItemsData.map(navItem) }\n        </nav>\n    );\n};\n\nexport default MainNav;","import React from \"react\";\nimport Fedetc from './img/fedetc.jpg';\nimport FedeClase2 from './img/fedeclase2.jpeg';\nimport \"./AboutMe.scss\";\n\nconst AboutMe = () => {\n    return (\n        <section className=\"about-me content-section\">\n            <h1 className=\"title\"><span className=\"title-underline\">Abou</span>t Me</h1>\n            <article className=\"content\">\n                <div>\n                    <div className=\"image-container left\">\n                        <img className=\"image\" alt=\"\" src={Fedetc} loading=\"lazy\" />\n                    </div>\n                    <p>\n                        Hi! I'm Federico and I have 10+ years of experience in software, designing and creating solutions that can help businesses grow, coming either from a client's idea, or a research of what tool can be the next step for the company to expand, reduce costs and automate processes.\n                    </p>\n                    <p>\n                        My experience goes from fin tech and e-commerce to tourism and telecommunications, including insurance and marketing.\n                        I'm currently teaching front-end development, focused on react, on a non governmental organization.\n                    </p>\n                </div>\n                \n                <div>\n                    <div className=\"image-container right\">\n                        <img className=\"image\" src={FedeClase2} loading=\"lazy\" />\n                    </div>\n                    <p>\n                        My technical knowledge varies from web applications development in both front-end as well as back-end, to micro services and lambda functions. I also have experience with web servers both designing, maintaining, and migrating data or entire systems from standard web servers to a cloud based system.\n                    </p>\n                </div>\n            </article>\n        </section>\n    );\n};\nexport default AboutMe;","import React from \"react\";\nimport \"./ServiceCard.scss\";\n\nconst ServiceCard = props => {\n    return (\n        <article key={props.title} className=\"service-card\">\n            <header>\n                <img src={props.icon} />\n                <h2>{props.title}</h2>\n            </header>\n            <p>\n                {props.body}\n            </p>\n        </article>\n    );\n};\n\nexport default ServiceCard;","import React from \"react\";\nimport ServiceCard from \"../../components/ServiceCard/ServiceCard\";\n\nimport AnalyticsIcon from './icons/analytics.svg';\nimport BrowserIcon from './icons/browser.svg';\nimport CodingIcon from './icons/coding.svg';\nimport ConnectionIcon from './icons/connection.svg';\nimport LayerIcon from './icons/layers.svg';\nimport SeoIcon from './icons/seo-and-web.svg';\n\nimport \"./Services.scss\";\n\n\nconst Services = () =>{\n    const services = [\n        /*{\n            icon: AnalyticsIcon,\n            title: \"Analytics\",\n            body: \"Im the best in analytics! I can offer you the best analytics stuff you will ever have and you will be surprised with the quality and test\"\n        },*/\n        {\n            icon: CodingIcon,\n            title: \"FrontEnd Development\",\n            body: \"FrontEnd Development focused on the interactions and the design of the page for you or your users to feel comfortable and engaged while navigating through the application.\"\n        },\n        {\n            icon: BrowserIcon,\n            title: \"BackEnd Development\",\n            body: \"BackEnd Development with top technologies using relational and non relational databases, and different architectures such as MVC pattern or Micro Services, to fit your needs.\"\n        },\n        {\n            icon: ConnectionIcon,\n            title: \"Application Design\",\n            body: \"I can help you design the application you imagine, with the technical knowledge to help you make decisions based on what's best for your app.\"\n        }, \n        /*{\n            icon: LayerIcon,\n            title: \"Layers\",\n            body: \"So many layers of complexity will win me money\"\n        },\n        {\n            icon: SeoIcon,\n            title: \"SEO and Web\",\n            body: \"SEO is a tool. Web is a tool. I do both.\"\n        }*/\n    ];\n    return (\n        <section className=\"services content-section\">\n            <h1 className=\"title\"><span className=\"title-underline\">Serv</span>ices</h1>\n            <div className=\"content\">\n                {services.map(ServiceCard)}\n            </div>\n        </section>\n    );\n};\n\nexport default Services;","import React from \"react\";\n\nimport \"./Contact.scss\";\nimport ServiceCard from \"../../components/ServiceCard/ServiceCard\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons';\nimport {faLinkedin, faSkype} from '@fortawesome/free-brands-svg-icons';\n\nconst Contact = () => {\n    return (\n        <section className=\"contact content-section\">\n            <h1 className=\"title\"><span className=\"title-underline\">Cont</span>act</h1>\n            <div className=\"content\">\n                <div className=\"contact-data\">\n                    <FontAwesomeIcon icon={faEnvelope} /><a href=\"mailto:hello@fmarino.dev\">hello@fmarino.dev</a>\n                </div>\n                <div className=\"contact-data\">\n                    <FontAwesomeIcon icon={faLinkedin} /><a href=\"https://www.linkedin.com/in/federicomarinozubia/\">https://www.linkedin.com/in/federicomarinozubia/</a>\n                </div>\n                <div className=\"contact-data\">\n                    <FontAwesomeIcon icon={faSkype} /><a href=\"skype:f.linwele?call\">f.linwele</a>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Contact;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route } from 'react-router';\nimport MainNav from \"./components/MainNav/MainNav\";\nimport AboutMe from \"./pages/AboutMe/AboutMe\";\nimport Services from \"./pages/Services/Services\";\nimport Contact from \"./pages/Contact/Contact\";\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n            <header className=\"main-header\">\n                <MainNav />\n            </header>\n            <main className=\"main\">\n                <Route exact path=\"/\" component={ AboutMe } />\n                <Route path=\"/services\" component={ Services } />\n                <Route path=\"/contact\" component={ Contact } />\n            </main>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}